/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.RolePlant;

import Info.CropInfo;
import Info.CropInfoDirectory;
import Info.CropMethodDirectory;
import Business.ecosystem;
import Enterprise.Enterprise;
import Network.network;
import Network.subnetwork;
import UserAcc.useracc;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hrishithaputtala
 */
public class GardenDesign extends javax.swing.JPanel {

    /**
     * Creates new form GardenDesign
     */
    JPanel container;
    useracc account;
    CropInfoDirectory cropDataDirectory;
    CropMethodDirectory cropMethodDirectory;
    
    public GardenDesign(JPanel container,useracc account, CropInfoDirectory cropDataDirectory, CropMethodDirectory cropMethodDirectory) {
        initComponents();
        this.container = container;
        this.account = account;
        this.cropDataDirectory=cropDataDirectory;
        this.cropMethodDirectory=cropMethodDirectory;
//        planMyGardenJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/student/information/system/images/bk4.jpg")));
        populateLabel();
    }
    
    public void populateLabel(){
        for (CropInfo c : cropDataDirectory.getCropDataList()) {
           if (c.getCity().equalsIgnoreCase(account.getCity())){
               StateLabel.setText(account.getState());
               CityLabel.setText(account.getCity());
               
           }}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCrops = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        planMyGardenJLabel = new javax.swing.JLabel();
        BthTopCropsInMarket = new javax.swing.JButton();
        BthcheckFarmingMethods = new javax.swing.JButton();
        BtnTopCropsInArea = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CityLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        StateLabel = new javax.swing.JLabel();
        btnBBack = new javax.swing.JButton();

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setBackground(new java.awt.Color(255, 204, 153));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 0));
        jLabel1.setText("CROP POPULARITY");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0), 2));

        tblCrops.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Season", "Crop1", "Crop2", "Crop3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCrops);
        if (tblCrops.getColumnModel().getColumnCount() > 0) {
            tblCrops.getColumnModel().getColumn(0).setResizable(false);
        }

        BthTopCropsInMarket.setBackground(new java.awt.Color(102, 102, 0));
        BthTopCropsInMarket.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        BthTopCropsInMarket.setText("Crop Popularity in market");
        BthTopCropsInMarket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BthTopCropsInMarketActionPerformed(evt);
            }
        });

        BthcheckFarmingMethods.setBackground(new java.awt.Color(102, 102, 0));
        BthcheckFarmingMethods.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        BthcheckFarmingMethods.setText("Farming Methods");
        BthcheckFarmingMethods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BthcheckFarmingMethodsActionPerformed(evt);
            }
        });

        BtnTopCropsInArea.setBackground(new java.awt.Color(102, 102, 0));
        BtnTopCropsInArea.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        BtnTopCropsInArea.setText("Crop Popularity in an Area");
        BtnTopCropsInArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTopCropsInAreaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("City:");

        CityLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        CityLabel.setText("CityLabel");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("State:");

        StateLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        StateLabel.setText("StateLabel");

        btnBBack.setText("<< Back");
        btnBBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(planMyGardenJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(356, 356, 356))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnTopCropsInArea, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BthTopCropsInMarket, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(203, 203, 203))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnBBack)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(BthcheckFarmingMethods, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(StateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(CityLabel)
                .addGap(221, 221, 221))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(planMyGardenJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CityLabel)
                    .addComponent(StateLabel)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnTopCropsInArea, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BthTopCropsInMarket, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(BthcheckFarmingMethods, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(btnBBack)
                .addGap(60, 60, 60)
                .addComponent(jLabel5)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private void BtnTopCropsInAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTopCropsInAreaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCrops.getModel();

        model.setRowCount(0);
       for (CropInfo c : cropDataDirectory.getCropDataList()) {
           if (c.getCity().equalsIgnoreCase(account.getCity())){
           
                Object[] row = new Object[4];
                row[0] = c;
                row[1] = c.getCrop1();
                row[2] = c.getCrop2();
                row[3] = c.getCrop3();
               model.addRow(row);
           }
               
                System.out.println(" "+c.getStateName()+" "+c.getCity()+" "+c.getSeason()+" "+c.getCrop1()+" "+c.getCrop2()+" "+c.getCrop3());
                  

            }

    }//GEN-LAST:event_BtnTopCropsInAreaActionPerformed

    private void BthcheckFarmingMethodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BthcheckFarmingMethodsActionPerformed
        // TODO add your handling code here:
        int selectedRowCount = tblCrops.getSelectedRow();
        if (selectedRowCount < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to view");
        }
        else{
            CropInfo cropData = (CropInfo) tblCrops.getValueAt(selectedRowCount, 0);
            FarmingStatus JPanel = new FarmingStatus(container,cropData,cropMethodDirectory);
            container.add("CheckFarmingMethodsJPanel", JPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        }
  
    }//GEN-LAST:event_BthcheckFarmingMethodsActionPerformed

    private void BthTopCropsInMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BthTopCropsInMarketActionPerformed
        // TODO add your handling code here:
        Graph graphJPanel = new Graph(container);
       container.add("graphJPanel", graphJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_BthTopCropsInMarketActionPerformed

    private void btnBBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BthTopCropsInMarket;
    private javax.swing.JButton BthcheckFarmingMethods;
    private javax.swing.JButton BtnTopCropsInArea;
    private javax.swing.JLabel CityLabel;
    private javax.swing.JLabel StateLabel;
    private javax.swing.JButton btnBBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel planMyGardenJLabel;
    private javax.swing.JTable tblCrops;
    // End of variables declaration//GEN-END:variables
}
