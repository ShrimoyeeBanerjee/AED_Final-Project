/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.RolePlant;

import organization.Euser;
import UserAcc.useracc;
import Work.EventOrganizer;
import Work.Request;
import com.twilio.Twilio;
import com.twilio.rest.api.v2010.account.Message;
import com.twilio.type.PhoneNumber;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hrishithaputtala
 */
public class EnrollingForEvent extends javax.swing.JPanel {

    /**
     * Creates new form EnrollingForEvent
     */
    JPanel container;
    useracc account;
    Euser endUserOrganization;
    ArrayList<Request> listOfReq;

    EnrollingForEvent(JPanel container, useracc account,Euser endUserOrganization) {
        initComponents(); //To change body of generated methods, choose Tools | Templates.
        this.container = container;
        this.account = account;
        this.endUserOrganization = endUserOrganization;
        this.listOfReq = endUserOrganization.getWorkQueue().getWorkRequestList();
        populateQATable();
    }
    
    public void populateQATable(){
    DefaultTableModel tbl = (DefaultTableModel) tblEvent.getModel();
        tbl.setRowCount(0);
         for(Request wk : listOfReq){
            if (wk instanceof EventOrganizer){
                Object[] row = new Object[5];
                row[0] = wk;
                row[1] = ((EventOrganizer) wk).getEventAddress();
                row[2] = ((EventOrganizer) wk).getEventDate();
                row[3] = ((EventOrganizer) wk).getTotalSeats();
                row[4] = ((EventOrganizer) wk).getRemainingSeat();
                tbl.addRow(row);
        }
            
        
        
        
 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEvent = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 153));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 0));
        jLabel1.setText("EVENTS ENROLMENT");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0), 2));

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        tblEvent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Event Address", "Event Date", "Number of Seats", "Number of Remaining Seats"
            }
        ));
        jScrollPane1.setViewportView(tblEvent);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel2.setText("Hurry!! Select an event from and REGISTER >>>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRegister))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(130, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblEvent.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row");
        }
        
        else{
            DefaultTableModel dtm = (DefaultTableModel) tblEvent.getModel();
            
                Request wr = (Request)dtm.getValueAt(selectedRow,0);
                                
                for(Request wk : listOfReq){
                    if (wk instanceof EventOrganizer){
                        
                      if(((EventOrganizer) wk).getEventName().equals(wr.getMessage())){
                        
                          if (((EventOrganizer) wk).getRemainingSeat() > 0){
                                int x = ((EventOrganizer) wk).getRemainingSeat() - 1;                        
                                ((EventOrganizer) wk).setRemainingSeat(x);
                                JOptionPane.showMessageDialog(null,"Successfully Registered");
                                populateQATable();
                                
                                String mobNo = JOptionPane.showInputDialog("Enter Your Mobile Number to get details of the event");
                                
                                if (mobNo != null){
                                sendSMS(mobNo, ((EventOrganizer) wk).getEventName(), ((EventOrganizer) wk).getEventDate());
                                }
                          }
                          
                          else if (((EventOrganizer) wk).getRemainingSeat() < 1){
                                //int x = ((EventOrganizer) wk).getRemainingSeat() - 1;                        
                                //((EventOrganizer) wk).setRemainingSeat(x);
                                JOptionPane.showMessageDialog(null,"No Seats available");
                               // populateQATable();
                               // String mobNo = JOptionPane.showInputDialog("Enter Your Mobile Number to get details of the event");
                                //sendSMS(mobNo, ((EventOrganizer) wk).getEventName(), ((EventOrganizer) wk).getEventDate());
                          }
                         
                        
                }
            }
            }
              
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed
public void sendSMS(String Number, String Name, String Date){
    Twilio.init("ACded94591e66f983b7f73c89336b1c3df", "7980a1f0a1a1f0af739b113351287a6d");
 
            Message message = Message
            .creator(new PhoneNumber(Number), new PhoneNumber("+1 347-947-2698"),
                "Hello..!! your registration is successful..!! Event Name: "+Name+" on Date: "+Date+" Best Regards - UpSwing Farming Team ").create();
 
                System.out.println(message.getSid());
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEvent;
    // End of variables declaration//GEN-END:variables
}
